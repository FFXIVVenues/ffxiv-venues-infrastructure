version: '3.7'

services:
  web:
    container_name: FFXIVVenues.Web
    image: ffxivvenues/ffxivvenues.web:${IMAGE_TAG}
    restart: unless-stopped
    networks:
      - web
    environment:
      - VITE_FFXIV_VENUES_API_ROOT=${API_PUBLIC_URI}

  api:
    container_name: FFXIVVenues.Api
    image: ffxivvenues/ffxivvenues.api:${IMAGE_TAG}
    restart: unless-stopped
    depends_on:
      - postgres
    volumes:
      - api-media:/app/media:rw
    networks:
      - ffxivvenues
      - web
    env_file:
      - api.env

  postgres:
    container_name: FFXIVVenues.Api.Postgres
    image: postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ffxivvenues
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  veni:
    container_name: FFXIVVenues.Veni
    image: ffxivvenues/ffxivvenues.veni:${IMAGE_TAG}
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - ffxivvenues
    env_file:
      - veni.env

  mongo:
    container_name: FFXIVVenues.Veni.Mongo
    image: mongo
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
    networks:
      - ffxivvenues

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./nginx/config:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - web
    restart: always
    depends_on:
      - web
      - api

volumes:
  postgres-data:
    name: FFXIVVenues.Api.Postgres.Data
  api-media:
    name: FFXIVVenues.Api.MediaData
  mongo-data:
    name: FFXIVVenues.Veni.Mongo.Data

networks:
  web:
    name: Web
  ffxivvenues:
    name: FFXIVVenues.Network